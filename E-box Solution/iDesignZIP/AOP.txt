package com.springboot.controller;

import com.springboot.model.Doctor;
import com.springboot.service.DoctorService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class DoctorController {

	@Autowired
	private DoctorService service;

	@GetMapping("/add/doctor")
	public Doctor addDoctor(@RequestParam("doctorId") String doctorId,
							@RequestParam("name") String name,
							@RequestParam("experience") String experience
	) {
		Double exp = Double.parseDouble(experience);
		return service.createDoctor(doctorId, name, exp);
	}

	@GetMapping("/remove/doctor")
	public String removeDoctor(@RequestParam("doctorId") String doctorId) {
		return service.deleteDoctor(doctorId);
	}
}
-----------------------------------------------------------------------------------------------------------------
package com.springboot.service;

import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;
import com.springboot.model.Doctor;

@Service

public class DoctorService {

    public Doctor createDoctor(String doctorId,
                               String name,
                               Double experience) {
        Doctor doc = new Doctor(doctorId,
                name,
                experience
        );
        return doc;
    }

    public String deleteDoctor(String doctorId) {
        return "Doctor removed";
    }
    
}
-----------------------------------------------------------------------------------------------------------------
package com.springboot;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.EnableAspectJAutoProxy;

import java.util.Properties;
@SpringBootApplication
@EnableAspectJAutoProxy(proxyTargetClass=true)
public class App {

	public static void main(String[] args) {

		SpringApplication.run(App.class, args);
	}
}
-----------------------------------------------------------------------------------------------------------------
package com.springboot.model;

public class Doctor {
	
	private String doctorId;
	private String name;
	private Double experience;
		
	public Doctor(String doctorId, String name, Double experience) {
		super();
		this.doctorId = doctorId;
		this.name = name;
		this.experience = experience;
	}
	
	public String getId() {
		return doctorId;
	}
	public void setId(String doctorId) {
		this.doctorId = doctorId;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public Double getExperience() {
		return experience;
	}
	public void setExperience(Double experience) {
		this.experience = experience;
	}
	
	
}
-------------------------------------------------------------------------------------------------------------------
package com.springboot.aspect;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.*;
import org.springframework.stereotype.Component;

@Aspect
public class DoctorServiceAspect {

	@Before("execution(* com.springboot.service.DoctorService.createDoctor(..)) && args(doctorId, name, experience)")
	void beforeAdvice(JoinPoint joinPoint, String doctorId, String name, Double experience){
		System.out.println("Before method:" + joinPoint.getSignature());
		System.out.println("Creating doctor with id - " + doctorId + ", name - " + name + " and experience - " + experience);
	}

	@Before("execution(* com.springboot.service.DoctorService.deleteDoctor(..)) && args(doctorId)")
	void beforeAdviceDelete(JoinPoint joinPoint, String doctorId) {
		System.out.println("Before method:" + joinPoint.getSignature());
		System.out.println("Deleting doctor with id - " + doctorId);
	}

}
